Die Komponente SearchAndListComponent kann folgende Props haben:

  Welche props braucht die Komponente?--> geklammerte Nummern müssen nur bei einer TwoListComponent angegeben werden
1.  isTwoListComponent: Die Komponente hat generell zwei Modi: oneListMode und twoListMode. Mit false wird die Komponente auf oneListMode gestellt.
    D.h. es wird nur eine Liste geben, in der Sachen gesucht und bearbeitet (über entsprechende Buttons die übergeben werden) werden können.
    Im twoListMode gibt es zwei Listen, wo es eine "normale" Liste gibt, die Keine besonderheiten Aufweist und in der zweiten (größeren) Liste
    Einträge gesucht/gefiltert werden können. Zusätzlich können Einträge zwischen den beiden Listen hin und her geschoben werden.
(2.)  normalListHeading: Überschrift der 1. Liste, in der nicht gesucht werden kann
3.  searchListHeading: Überschrift der 2. Liste (Bzw. der einzigen Liste, wenn es nur eine Liste gibt) in der gesucht werden kann
(4.)    normalList: Falls es eine twoListComponent ist, wird hier die normale Liste übergeben
5.  searchList: Hier wird die Liste übergeben, in der gesucht und gefiltert werden kann
6.  tableHeadWords: ein Array, aus welchem in dieser Reihenfolge die Überschriften für den Tabellenkopf übernommen werden
7.  searchOptionArray: Optionen, nach welchen im Suchfeld gesucht werden kann (Array of Objects. Der erste wert ist der value, nach dem in den Datensätzen
    gesucht wird (z.B. firstname oder username), der zweite Wert ist der dem User im Auswahlmenü angezeigte Wert, z.B. username und Benutzername)
    die Objektkeys müssen wie folgt heißen: {value: "...", displayedString: "..."}
8.  defaultSelectedSearchOption: Die Suchoption, die standartmäßig beim laden der Komponente ausgewählt ist
9.  filterOptionArray: Optionen, nach denen gefiltert werden kann. (Array of Objects. Der erste wert ist der value, nach dem gefiltert wird, der
    zweite Wert ist der dem User angezeigte Wert im Auswahlmenü, z.B. student und Schüler)
    Die Objektkeys müssen wie folgt heißen: {value: "...", displayedString: "..."}.
    Zusätzlich: der value "all" als Filter bewirkt, dass alle Ergebnisse angezeigt werden.
10.  filterParameter: Parameter, nach dem in der Datenbasis gefiltert werden kann (z.B. role oder subject)
(11.) buttonListForTableEntry: ein Array an Buttons, die bei einer single-List-Component für jede Row der Tabelle
    eingefügt werden (zum Beispiel Bearbeiten/löschen Buttons)

Beispiel für eine twoListComponent:

        <SearchListComponent
            isTwoListComponent={false}
            normalListHeading={"Erste Überschrift"}
            searchListHeading={"Zweite Überschrift"}
            normalList={usermockarray1}
            searchList={usermockarray2}
            tableHeadWords={["Id", "Benutzername", "vorname", "name", "Rolle"]}
            searchOptionArray={[{value: "username", displayedString: "Benutzername"}, {value: "vorname", displayedString: "Vorname"}, {value: "name", displayedString: "Nachname"}]}
            defaultSelectedSearchOption={"loginName"}
            filterOptionArray={[{value: "all", displayedString: "Alle"}, {value: "student", displayedString: "Schüler"}, {value: "teacher", displayedString: "Lehrer"}]}
            filterParameter={"role"}
            buttonListForTableEntry={[<Button onClick={() => alert("gut geklickt")}>Klick mich</Button>,<Button onClick={() => alert("Ey!")}>Klick mich bitte nicht</Button> ]}
        />